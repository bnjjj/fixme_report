name: Rust build & release

on:
  push:
    branches: 
      - master

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test
    - name: Get last tag
      continue-on-error: true
      run: echo "::set-env name=last_tag::$(git describe --abbrev=0)"
    - name: Get current version
      run: echo "::set-env name=current_version::$(./target/release/fixme_report --version | cut -d' ' -f 2)"
    - name: Echo
      run: echo "current version ${{ env.current_version }}"
    - name: Rename file
      run: mv target/release/fixme_report target/release/fixme_report_${{ runner.os }}
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: fixme_report_${{ runner.os }}
        # Directory containing files to upload
        path: target/release


  release:
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
    - name: Download artifact mac
      uses: actions/download-artifact@v1.0.0
      with:
        # Artifact name
        name: fixme_report_macOS
    - name: Download artifact linux
      uses: actions/download-artifact@v1.0.0
      with:
        # Artifact name
        name: fixme_report_Linux
    - name: Get last tag
      continue-on-error: true
      run: echo "::set-env name=last_tag::$(git describe --abbrev=0)"
    - name: Get current version
      run: echo "::set-env name=current_version::$(.fixme_report_Linux --version | cut -d' ' -f 2)"
    - name: Echo
      run: echo "current version ${{ env.current_version }}"
    - name: Automatic Releases
      if: env.last_tag != env.current_version || env.last_tag == ''
      uses: marvinpinto/action-automatic-releases@v0.2.2
      with:
        # GitHub secret token
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Git tag (for automatic releases)
        automatic_release_tag: ${{ env.current_version }} # optional
        # Should this release be marked as a draft?
        draft: true # optional
        # Should this release be marked as a pre-release?
        prerelease: false # optional, default is true
        # Release title (for automatic releases)
        title: v${{env.current_version}} # optional
        # Assets to upload to the release
        files: fixme_report_*

